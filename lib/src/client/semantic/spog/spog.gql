query QuerySpog($vulnerabilityID: String!) {
    findTopLevelPackagesRelatedToVulnerability(
        vulnerabilityID: $vulnerabilityID
    ) {
        __typename
        ... on CertifyVEXStatement {
            ...allCertifyVEXStatementTree
        }
        ... on CertifyVuln {
            ...allCertifyVulnTree
        }
        ... on Package {
            ...allPkgTree
        }
        ... on IsDependency {
            dependencyType
        }
    }
}

query FindVulnerability($purl: String!, $offset: Int, $limit: Int) {
    findVulnerability(purl: $purl, offset: $offset, limit: $limit) {
        __typename
        ... on CertifyVEXStatement {
            ...allCertifyVEXStatementTree
        }
        ... on CertifyVuln {
            ...allCertifyVulnTree
        }
    }
}

query FindVulnerabilityBySbomURI($sbomURI: String!, $offset: Int, $limit: Int) {
    findVulnerabilityBySbomURI(sbomURI: $sbomURI, offset: $offset, limit: $limit) {
        __typename
        ... on CertifyVEXStatement {
            ...allCertifyVEXStatementTree
        }
        ... on CertifyVuln {
            ...allCertifyVulnTree
        }
    }
}

fragment allPkgTree on Package {
    id
    type
    namespaces {
        id
        namespace
        names {
            id
            name
            versions {
                id
                version
                qualifiers {
                    key
                    value
                }
                subpath
            }
        }
    }
}

fragment allCertifyVEXStatementTree on CertifyVEXStatement {
    id
    subject {
        __typename
        ... on Package {
            id
            type
            namespaces {
                id
                namespace
                names {
                    id
                    name
                    versions {
                        id
                        version
                        qualifiers {
                            key
                            value
                        }
                        subpath
                    }
                }
            }
        }
        ... on Artifact {
            id
            algorithm
            digest
        }
    }
    vulnerability {
        id
        type
        vulnerabilityIDs {
            id
            vulnerabilityID
        }
    }
    status
    vexJustification
    statement
    statusNotes
    knownSince
    origin
    collector
}

fragment allCertifyVulnTree on CertifyVuln {
    id
    package {
        id
        type
        namespaces {
            id
            namespace
            names {
                id
                name
                versions {
                    id
                    version
                    qualifiers {
                        key
                        value
                    }
                    subpath
                }
            }
        }
    }
    vulnerability {
        id
        type
        vulnerabilityIDs {
            id
            vulnerabilityID
        }
    }
    metadata {
        dbUri
        dbVersion
        scannerUri
        scannerVersion
        timeScanned
        origin
        collector
    }
}