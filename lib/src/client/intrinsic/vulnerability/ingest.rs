use crate::client::intrinsic::vulnerability::IDorVulnerabilityInput;
use crate::client::intrinsic::vulnerability::VulnerabilityInputSpec;
use graphql_client::GraphQLQuery;
use std::ops::Deref;

#[derive(GraphQLQuery)]
#[graphql(
    schema_path = "src/client/intrinsic/schema.json",
    query_path = "src/client/intrinsic/vulnerability/vulnerability.gql",
    response_derives = "Debug, Serialize, Deserialize"
)]
pub struct IngestVulnerability;

impl From<&VulnerabilityInputSpec> for ingest_vulnerability::VulnerabilityInputSpec {
    fn from(vuln: &VulnerabilityInputSpec) -> Self {
        Self {
            type_: vuln.r#type.to_string(),
            vulnerability_id: vuln.vulnerability_id.to_string(),
        }
    }
}

impl From<&IDorVulnerabilityInput> for ingest_vulnerability::IDorVulnerabilityInput {
    fn from(vuln: &IDorVulnerabilityInput) -> Self {
        Self {
            vulnerability_input: vuln.vulnerability_input.as_ref().map(|vuln| vuln.into()),
            vulnerability_node_id: vuln.vulnerability_node_id.clone(),
            vulnerability_type_id: vuln.vulnerability_type_id.clone(),
        }
    }
}
