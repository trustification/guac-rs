fragment allCertifyVEXStatementTree on CertifyVEXStatement {
    id
    subject {
        __typename
        ... on Package {
            id
            type
            namespaces {
                id
                namespace
                names {
                    id
                    name
                    versions {
                        id
                        version
                        qualifiers {
                            key
                            value
                        }
                        subpath
                    }
                }
            }
        }
        ... on Artifact {
            id
            algorithm
            digest
        }
    }
    vulnerability {
        id
        type
        vulnerabilityIDs {
            id
            vulnerabilityID
        }
    }
    status
    vexJustification
    statement
    statusNotes
    knownSince
    origin
    collector
}

mutation IngestCertifyVexStatement($subject: PackageOrArtifactInput!, $vulnerability: IDorVulnerabilityInput!, $vex_statement: VexStatementInputSpec!) {
    ingestVEXStatement(
        subject: $subject
        vulnerability: $vulnerability
        vexStatement: $vex_statement
    )
}

query QueryCertifyVexStatement($certify_vex_statement_spec: CertifyVEXStatementSpec!) {
    CertifyVEXStatement(
        certifyVEXStatementSpec: $certify_vex_statement_spec
    ) {
        ...allCertifyVEXStatementTree
    }

}