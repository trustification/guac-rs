{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": "true",
              "description": null,
              "name": "if",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "label",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "The @defer directive may be specified on a fragment spread to imply de-prioritization, that causes the fragment to be omitted in the initial response, and delivered as a subsequent response afterward. A query with @defer directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred delivered in a subsequent response. @include and @skip take precedence over @defer.",
          "locations": [
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "defer"
        },
        {
          "args": [
            {
              "defaultValue": "\"No longer supported\"",
              "description": null,
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "The @deprecated built-in directive is used within the type system definition language to indicate deprecated portions of a GraphQL service's schema, such as deprecated fields on a type, arguments on a field, input fields on an input type, or values of an enum type.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "name": "deprecated"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @include directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional inclusion during execution as described by the if argument.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @skip directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional exclusion during execution as described by the if argument.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "skip"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": null,
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "description": "The @specifiedBy built-in directive is used within the type system definition language to provide a scalar specification URL for specifying the behavior of custom scalar types.",
          "locations": [
            "SCALAR"
          ],
          "name": "specifiedBy"
        }
      ],
      "mutationType": {
        "name": "Mutation"
      },
      "queryType": {
        "name": "Query"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "Artifact represents an artifact identified by a checksum hash.\n\nThe checksum is split into the digest value and the algorithm used to generate\nit. Both fields are mandatory and canonicalized to be lowercase.\n\nIf having a checksum Go object, algorithm can be\nstrings.ToLower(string(checksum.Algorithm)) and digest can be checksum.Value.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Artifact",
          "possibleTypes": []
        },
        {
          "description": "ArtifactInputSpec specifies an artifact for mutations.\n\nThe checksum fields are canonicalized to be lowercase.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ArtifactInputSpec",
          "possibleTypes": []
        },
        {
          "description": "ArtifactSpec allows filtering the list of artifacts to return in a query.\n\nThe checksum fields are canonicalized to be lowercase.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": []
        },
        {
          "description": "Builder represents the builder (e.g., FRSCA or GitHub Actions).\n\nCurrently builders are identified by the uri field.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Builder",
          "possibleTypes": []
        },
        {
          "description": "BuilderInputSpec specifies a builder for mutations.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "BuilderInputSpec",
          "possibleTypes": []
        },
        {
          "description": "BuilderSpec allows filtering the list of builders to return in a query.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "BuilderSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyBad is an attestation that a package, source, or artifact is considered\nbad.\n\nAll evidence trees record a justification for the property they represent as\nwell as the document that contains the attestation (origin) and the collector\nthat collected the document (collector).\n\nThe certification applies to a subject which is a package, source, or artifact.\nIf the attestation targets a package, it must target a PackageName or a\nPackageVersion. If the attestation targets a source, it must target a\nSourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageSourceOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyBad",
          "possibleTypes": []
        },
        {
          "description": "CertifyBadInputSpec represents the mutation input to ingest a CertifyBad\nevidence.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyBadInputSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyBadSpec allows filtering the list of CertifyBad evidence to return in a\nquery.\n\nIf a package is specified in the subject filter, then it must be specified up\nto PackageName or PackageVersion. That is, user must specify package name, or\nname and one of version, qualifiers, or subpath.\n\nIf a source is specified in the subject filter, then it must specify a name,\nand optionally a tag and a commit.\n\nIf KnownSince is specified, the returned value will be after or equal to the specified time.\nAny nodes time that is before KnownSince is excluded.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageSourceOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyBadSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyGood is an attestation that a package, source, or artifact is considered\ngood.\n\nAll evidence trees record a justification for the property they represent as\nwell as the document that contains the attestation (origin) and the collector\nthat collected the document (collector).\n\nThe certification applies to a subject which is a package, source, or artifact.\nIf the attestation targets a package, it must target a PackageName or a\nPackageVersion. If the attestation targets a source, it must target a\nSourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageSourceOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyGood",
          "possibleTypes": []
        },
        {
          "description": "CertifyGoodInputSpec represents the mutation input to ingest a CertifyGood evidence.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyGoodInputSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyBadSpec allows filtering the list of CertifyBad evidence to return in a\nquery.\n\nIf a package is specified in the subject filter, then it must be specified up\nto PackageName or PackageVersion. That is, user must specify package name, or\nname and one of version, qualifiers, or subpath.\n\nIf a source is specified in the subject filter, then it must specify a name,\nand optionally a tag and a commit.\n\nIf KnownSince is specified, the returned value will be after or equal to the specified time.\nAny nodes time that is before KnownSince is excluded.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageSourceOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyGoodSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyLegal is an attestation to attach legal information to a package or source.\n\nThe certification information is either copied from an attestation found in an\nSBOM or created by a collector/scanner.\n\nDiscovered license is also known as Concluded. More information:\nhttps://docs.clearlydefined.io/curation-guidelines#the-difference-between-declared-and-discovered-licenses\n\nAttribution is also known as Copyright Text. It is what could be displayed to\ncomply with notice\nrequirements. https://www.nexb.com/oss-attribution-best-practices/\n\nLicense expressions follow this format:\nhttps://spdx.github.io/spdx-spec/v2.3/SPDX-license-expressions/",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The package version or source that is attested",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrSource",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The license expression as delcared",
              "isDeprecated": false,
              "name": "declaredLicense",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of license objects found in the declared license expression",
              "isDeprecated": false,
              "name": "declaredLicenses",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "License",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The license expression as discovered by scan",
              "isDeprecated": false,
              "name": "discoveredLicense",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of license objects found in the discovered license expression",
              "isDeprecated": false,
              "name": "discoveredLicenses",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "License",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Attribution text of the subject",
              "isDeprecated": false,
              "name": "attribution",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Extra justification for the certification",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time of scan (in RFC 3339 format)",
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyLegal",
          "possibleTypes": []
        },
        {
          "description": "CertifyLegalInputSpec represents the input for certifying legal information in\nmutations.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "declaredLicense",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "discoveredLicense",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "attribution",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyLegalInputSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyLegalSpec allows filtering the list of legal certifications to\nreturn in a query.\n\nSpecifying just the package allows to query for all certifications associated\nwith the package.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrSourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "declaredLicense",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "declaredLicenses",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "LicenseSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "discoveredLicense",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "discoveredLicenses",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "LicenseSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "attribution",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyLegalSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyScorecard is an attestation to attach a Scorecard analysis to a\nparticular source repository.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The source repository that is being scanned (attestation subject)",
              "isDeprecated": false,
              "name": "source",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The Scorecard attached to the repository (attestation object)",
              "isDeprecated": false,
              "name": "scorecard",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Scorecard",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyScorecard",
          "possibleTypes": []
        },
        {
          "description": "CertifyScorecardSpec allows filtering the list of Scorecards to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "aggregateScore",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "checks",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ScorecardCheckSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardCommit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyScorecardSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyVEXStatement is an attestation to attach VEX statements to a package or\nartifact to clarify the impact of a specific vulnerability.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Subject of attestation",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Attested vulnerability",
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Vulnerability",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Status of the vulnerabilities with respect to the subject",
              "isDeprecated": false,
              "name": "status",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexStatus",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification from VEX statement",
              "isDeprecated": false,
              "name": "vexJustification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexJustification",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "VEX statement: impact_statement or action_statement depending on status",
              "isDeprecated": false,
              "name": "statement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "statusNotes may convey information about how status was determined",
              "isDeprecated": false,
              "name": "statusNotes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp (exact time in RFC 3339 format) for the VEX statement",
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyVEXStatement",
          "possibleTypes": []
        },
        {
          "description": "CertifyVEXStatementSpec allows filtering the list of VEX statements to\nreturn in a query.\n\nOnly one subject type (package or artifact) and one vulnerability may be specified.\n\nNote that setting noVuln vulnerability type is invalid for VEX statements!",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerability",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "VulnerabilitySpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "status",
              "type": {
                "kind": "ENUM",
                "name": "VexStatus",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vexJustification",
              "type": {
                "kind": "ENUM",
                "name": "VexJustification",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statement",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statusNotes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyVEXStatementSpec",
          "possibleTypes": []
        },
        {
          "description": "CertifyVuln is an attestation to attach vulnerability information to a package.\n\nThis information is obtained via a scanner. If there is no vulnerability\ndetected, we attach the a vulnerability with \"NoVuln\" type and an empty string\nfor the vulnerability ID.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The package that is attested",
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The vulnerability can be an be a specific vulnerability or NoVuln type.",
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Vulnerability",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Metadata attached to the certification",
              "isDeprecated": false,
              "name": "metadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ScanMetadata",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CertifyVuln",
          "possibleTypes": []
        },
        {
          "description": "CertifyVulnOrCertifyVEXStatement is a union of CertifyVuln and CertifyVEXStatement.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "CertifyVulnOrCertifyVEXStatement",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CertifyVuln",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyVEXStatement",
              "ofType": null
            }
          ]
        },
        {
          "description": "CertifyVulnSpec allows filtering the list of vulnerability certifications to\nreturn in a query.\n\nSpecifying just the package allows to query for all vulnerabilities associated\nwith the package.\n\nOnly one vulnerability (or NoVuln vulnerability type) may be\nspecified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerability",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "VulnerabilitySpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbUri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerUri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "CertifyVulnSpec",
          "possibleTypes": []
        },
        {
          "description": "The Comparator is used by the vulnerability score filter on ranges",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "GREATER"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "LESS"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "GREATER_EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "LESS_EQUAL"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "Comparator",
          "possibleTypes": []
        },
        {
          "description": "DependencyType determines the type of the dependency.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "direct dependency",
              "isDeprecated": false,
              "name": "DIRECT"
            },
            {
              "deprecationReason": null,
              "description": "indirect dependency",
              "isDeprecated": false,
              "name": "INDIRECT"
            },
            {
              "deprecationReason": null,
              "description": "type not known/not specified",
              "isDeprecated": false,
              "name": "UNKNOWN"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "DependencyType",
          "possibleTypes": []
        },
        {
          "description": "Edge allows filtering path/neighbors output to only contain a subset of all\npossible GUAC links.\n\nEach member of the enum is formed by merging two Node names with _. Each name\nis converted from CamelCase to CAPITALS_WITH_UNDERSCORES. Only valid edges\n(pairs from Node to Node) are included.\n\nThe only exception to the above rule is for links out of HasSLSA. The names are\nHAS_SLSA_SUBJECT, HAS_SLSA_BUILT_BY, and HAS_SLSA_MATERIALS. This is because\nARTIFACT_HAS_SLSA is only from subject Artifact to HasSLSA.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_CERTIFY_BAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_CERTIFY_GOOD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_HASH_EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_HAS_METADATA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_HAS_SBOM"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_HAS_SLSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_IS_OCCURRENCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARTIFACT_POINT_OF_CONTACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "BUILDER_HAS_SLSA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "LICENSE_CERTIFY_LEGAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_BAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_GOOD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_LEGAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_HAS_METADATA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_HAS_SBOM"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_HAS_SOURCE_AT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_IS_DEPENDENCY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_IS_OCCURRENCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_PKG_EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PACKAGE_POINT_OF_CONTACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_BAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_GOOD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_LEGAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_CERTIFY_SCORECARD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_HAS_METADATA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_HAS_SOURCE_AT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_IS_OCCURRENCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SOURCE_POINT_OF_CONTACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABILITY_CERTIFY_VEX_STATEMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABILITY_CERTIFY_VULN"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABILITY_VULN_EQUAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABILITY_VULN_METADATA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_BAD_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_BAD_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_BAD_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_GOOD_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_GOOD_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_GOOD_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_LEGAL_LICENSE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_LEGAL_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_LEGAL_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_SCORECARD_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VEX_STATEMENT_VULNERABILITY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CERTIFY_VULN_VULNERABILITY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HASH_EQUAL_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_METADATA_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_METADATA_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_METADATA_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SBOM_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SBOM_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SLSA_BUILT_BY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SLSA_MATERIALS"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SLSA_SUBJECT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SOURCE_AT_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "HAS_SOURCE_AT_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_DEPENDENCY_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_OCCURRENCE_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_OCCURRENCE_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "IS_OCCURRENCE_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PKG_EQUAL_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "POINT_OF_CONTACT_ARTIFACT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "POINT_OF_CONTACT_PACKAGE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "POINT_OF_CONTACT_SOURCE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULN_EQUAL_VULNERABILITY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULN_METADATA_VULNERABILITY"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "Edge",
          "possibleTypes": []
        },
        {
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": []
        },
        {
          "description": "HasMetadata is an attestation that a package, source, or artifact has a certain\nattested property (key) with value (value). For example, a source may have\nmetadata \"SourceRepo2FAEnabled=true\".\n\nThe intent of this evidence tree predicate is to allow extensibility of metadata\nexpressible within the GUAC ontology. Metadata that is commonly used will then\nbe promoted to a predicate on its own.\n\nJustification indicates how the metadata was determined.\n\nThe metadata applies to a subject which is a package, source, or artifact.\nIf the attestation targets a package, it must target a PackageName or a\nPackageVersion. If the attestation targets a source, it must target a\nSourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageSourceOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "timestamp",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasMetadata",
          "possibleTypes": []
        },
        {
          "description": "HasMetadataInputSpec represents the mutation input to ingest a CertifyGood evidence.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timestamp",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasMetadataInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HasMetadataSpec allows filtering the list of HasMetadata evidence to return in a\nquery.\n\nIf a package is specified in the subject filter, then it must be specified up\nto PackageName or PackageVersion. That is, user must specify package name, or\nname and one of version, qualifiers, or subpath.\n\nIf a source is specified in the subject filter, then it must specify a name,\nand optionally a tag and a commit.\n\nsince specified indicates filtering timestamps after the specified time",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageSourceOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "since",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasMetadataSpec",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "SBOM subject",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Identifier for the SBOM document",
              "isDeprecated": false,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Algorithm by which SBOMs digest was computed",
              "isDeprecated": false,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Digest of SBOM",
              "isDeprecated": false,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Location from which the SBOM can be downloaded",
              "isDeprecated": false,
              "name": "downloadLocation",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp for SBOM creation",
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSBOM",
          "possibleTypes": []
        },
        {
          "description": "HasSBOMInputSpec is the same as HasSBOM but for mutation input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "downloadLocation",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSBOMInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HasSBOMSpec allows filtering the list of HasSBOM to return.\n\nOnly the package or artifact can be added, not both.\n\nIf KnownSince is specified, the returned value will be after or equal to the specified time.\nAny nodes time that is before KnownSince is excluded.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "uri",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "algorithm",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "digest",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "downloadLocation",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSBOMSpec",
          "possibleTypes": []
        },
        {
          "description": "HasSLSA records that a subject node has a SLSA attestation.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The subject of SLSA attestation",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Artifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The SLSA attestation",
              "isDeprecated": false,
              "name": "slsa",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SLSA",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSLSA",
          "possibleTypes": []
        },
        {
          "description": "HasSLSASpec allows filtering the list of HasSLSA to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtFrom",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "builtBy",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BuilderSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "buildType",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "predicate",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SLSAPredicateSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "startedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "finishedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSLSASpec",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAt records that a package's repository is a given source.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The subject of the attestation: can be a PackageName or a PackageVersion",
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Source repository from which the package is built",
              "isDeprecated": false,
              "name": "source",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp since this link between package and source was certified",
              "isDeprecated": false,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for the attested relationship",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HasSourceAt",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAtInputSpec is the same as HasSourceAt but for mutation input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSourceAtInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HasSourceAtSpec allows filtering the list of HasSourceAt to return.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HasSourceAtSpec",
          "possibleTypes": []
        },
        {
          "description": "HashEqual is an attestation that a set of artifacts are identical.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Collection of artifacts that are similar",
              "isDeprecated": false,
              "name": "artifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for the claim that the artifacts are similar",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "HashEqual",
          "possibleTypes": []
        },
        {
          "description": "HashEqualInputSpec represents the input to certify that packages are similar.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HashEqualInputSpec",
          "possibleTypes": []
        },
        {
          "description": "HashEqualSpec allows filtering the list of artifact equality statements to\nreturn in a query.\n\nSpecifying just one artifact allows to query for all similar artifacts (if any\nexists).",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifacts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "ArtifactSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "HashEqualSpec",
          "possibleTypes": []
        },
        {
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \"4\") or integer (such as 4) input value will be accepted as an ID.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": []
        },
        {
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": []
        },
        {
          "description": "IsDependency is an attestation to record that a package depends on another. ",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Package that has the dependency",
              "isDeprecated": false,
              "name": "package",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Package for the dependency; MUST be PackageName or PackageVersion ",
              "isDeprecated": false,
              "name": "dependencyPackage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Package",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version range for the dependency link, required if depedentPackage points to PackageName",
              "isDeprecated": false,
              "name": "versionRange",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Type of dependency",
              "isDeprecated": false,
              "name": "dependencyType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DependencyType",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for the attested relationship",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsDependency",
          "possibleTypes": []
        },
        {
          "description": "IsDependencyInputSpec is the input to record a new dependency.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": "versionRange should be specified for depedentPackages that point to PackageName",
              "name": "versionRange",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dependencyType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DependencyType",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsDependencyInputSpec",
          "possibleTypes": []
        },
        {
          "description": "IsDependencySpec allows filtering the list of dependencies to return.\n\nTo obtain the list of dependency packages, caller must fill in the package\nfield.\n\nDependency packages must be defined at PackageName, not PackageVersion.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dependencyPackage",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "versionRange",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dependencyType",
              "type": {
                "kind": "ENUM",
                "name": "DependencyType",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsDependencySpec",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrence is an attestation to link an artifact to a package or source.\n\nAttestation must occur at the PackageVersion or at the SourceName.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Package or source from which the artifact originates",
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageOrSource",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The artifact in the relationship",
              "isDeprecated": false,
              "name": "artifact",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Artifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for the attested relationship",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "IsOccurrence",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrenceInputSpec represents the input to record an artifact's origin.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsOccurrenceInputSpec",
          "possibleTypes": []
        },
        {
          "description": "IsOccurrenceSpec allows filtering the list of artifact occurences to return in\na query.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageOrSourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "IsOccurrenceSpec",
          "possibleTypes": []
        },
        {
          "description": "License represents a particular license. If the license is found on the SPDX\nlicense list (https://spdx.org/licenses/) then the fields should be:\n\nName: SPDX license identifier\nInline: empty\nListVersion: SPDX license list version\n\nexample:\n\nName: AGPL-3.0-or-later\nInline: \"\"\nListVersion: 3.21 2023-06-18\n\nIf the license is not on the SPDX license list, then a new guid should be\ncreated and the license text placed inline:\n\nName: LicenseRef-<guid>\nInline: Full license text\nListVersion: empty\n\nexample:\n\nName: LicenseRef-1a2b3c\nInline: Permission to use, copy, modify, and/or distribute ...\nListVersion: \"\"",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inline",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "listVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "License",
          "possibleTypes": []
        },
        {
          "description": "LicenseInputSpec specifies an license for mutations. One of inline or\nlistVersion should be empty or missing.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "inline",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "listVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "LicenseInputSpec",
          "possibleTypes": []
        },
        {
          "description": "LicenseSpec allows filtering the list of licenses to return in a query.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "inline",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "listVersion",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "LicenseSpec",
          "possibleTypes": []
        },
        {
          "description": "MatchFlags is used to input the PkgMatchType enum.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "pkg",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PkgMatchType",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "MatchFlags",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifact",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a new artifact and returns it. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestArtifact",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifacts",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingests new artifacts and returns a list of them. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestArtifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builder",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BuilderInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a new builder and returns it. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestBuilder",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builders",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "BuilderInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingests new builders and returns a list of them. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestBuilders",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyBad",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyBadInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package, source or artifact is considered bad. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestCertifyBad",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyBads",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "CertifyBadInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds bulk certifications that a package, source or artifact is considered bad. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestCertifyBads",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyGood",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyGoodInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package, source or artifact is considered good. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestCertifyGood",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyGoods",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "CertifyGoodInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds bulk certifications that a package, source or artifact is considered good. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestCertifyGoods",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrSourceInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "declaredLicenses",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "LicenseInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "discoveredLicenses",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "LicenseInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyLegal",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyLegalInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a legal certification to a package or source.",
              "isDeprecated": false,
              "name": "ingestCertifyLegal",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrSourceInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "declaredLicensesList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "LIST",
                          "name": null,
                          "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                              "kind": "INPUT_OBJECT",
                              "name": "LicenseInputSpec",
                              "ofType": null
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "discoveredLicensesList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "LIST",
                          "name": null,
                          "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                              "kind": "INPUT_OBJECT",
                              "name": "LicenseInputSpec",
                              "ofType": null
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyLegals",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "CertifyLegalInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk add legal certifications to packages or sources, not both at same time.",
              "isDeprecated": false,
              "name": "ingestCertifyLegals",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "source",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "scorecard",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ScorecardInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a source repository has a Scorecard. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestScorecard",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sources",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "SourceInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "scorecards",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ScorecardInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds bulk certifications that a source repository has a Scorecard. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestScorecards",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vexStatement",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VexStatementInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a VEX certification for a package. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestVEXStatement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrArtifactInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilities",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vexStatements",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VexStatementInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk add VEX certifications for a package and vulnerability. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestVEXStatements",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVuln",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ScanMetadataInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package has been scanned for vulnerabilities. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestCertifyVuln",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilities",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVulns",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ScanMetadataInput",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk add certifications that a package has been scanned for vulnerabilities. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestCertifyVulns",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pointOfContact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PointOfContactInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a PointOfContact attestation to a package, source or artifact. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestPointOfContact",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pointOfContacts",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PointOfContactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds bulk PointOfContact attestations to a package, source or artifact. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestPointOfContacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSBOM",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSBOMInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Certifies that a package or artifact has an SBOM. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestHasSBOM",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrArtifactInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSBOMs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "HasSBOMInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingest that package or artifact has an SBOM. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestHasSBOMs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builtFrom",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builtBy",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BuilderInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "slsa",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SLSAInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a SLSA attestation. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestSLSA",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builtFromList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "LIST",
                          "name": null,
                          "ofType": {
                            "kind": "NON_NULL",
                            "name": null,
                            "ofType": {
                              "kind": "INPUT_OBJECT",
                              "name": "ArtifactInputSpec",
                              "ofType": null
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builtByList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "BuilderInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "slsaList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "SLSAInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk Ingest SLSA attestations. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestSLSAs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "source",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSourceAt",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSourceAtInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that a package (PackageName or PackageVersion) is built from the source. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestHasSourceAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sources",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "SourceInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSourceAts",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "HasSourceAtInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingestion of certifications that a package (PackageName or PackageVersion) is built from the source. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestHasSourceAts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "otherArtifact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hashEqual",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HashEqualInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that two artifacts are equal. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestHashEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifacts",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "otherArtifacts",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hashEquals",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "HashEqualInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingest certifications that two artifacts are equal. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestHashEquals",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "depPkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "depPkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "dependency",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsDependencyInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a dependency between two packages. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestDependency",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "depPkgs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "depPkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "dependencies",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "IsDependencyInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk adds a dependency between two packages. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestDependencies",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrSourceInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifact",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "occurrence",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsOccurrenceInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest that an artifact is produced from a package or source. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestOccurrence",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageOrSourceInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifacts",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ArtifactInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "occurrences",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "IsOccurrenceInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingest that an artifact is produced from a package or source. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestOccurrences",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "license",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "LicenseInputSpec",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a new license and returns it.",
              "isDeprecated": false,
              "name": "ingestLicense",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "licenses",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "LicenseInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingests new licenses and returns a list of them.",
              "isDeprecated": false,
              "name": "ingestLicenses",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInput",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasMetadata",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasMetadataInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds metadata about a package, source or artifact. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestHasMetadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subjects",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PackageSourceOrArtifactInputs",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgMatchType",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MatchFlags",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasMetadataList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "HasMetadataInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds bulk metadata about a package, source or artifact. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestBulkHasMetadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a new package and returns the corresponding package trie path. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestPackage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingests packages and returns the list of corresponding package trie path. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestPackages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkg",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "otherPackage",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgEqual",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgEqualInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds a certification that two packages are similar. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestPkgEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgs",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "otherPackages",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgEquals",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "PkgEqualInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingest mapping between packages. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestPkgEquals",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "source",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a new source and returns the corresponding source trie path. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestSource",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sources",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "SourceInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingests sources and returns the list of corresponding source trie path. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestSources",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "otherVulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnEqual",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnEqualInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingest a mapping between vulnerabilities. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestVulnEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilities",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "otherVulnerabilities",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnEquals",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnEqualInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingest mapping between vulnerabilities. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestVulnEquals",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerability",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilityMetadata",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityMetadataInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Adds metadata about a vulnerability. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestVulnerabilityMetadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilities",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilityMetadataList",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityMetadataInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk add certifications that vulnerability has a specific score. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestBulkVulnerabilityMetadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vuln",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityInputSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Ingests a new vulnerability and returns the corresponding vulnerability trie path. The returned ID can be empty string.",
              "isDeprecated": false,
              "name": "ingestVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulns",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "VulnerabilityInputSpec",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Bulk ingests vulnerabilities and returns the list of corresponding vulnerability trie path. The returned array of IDs can be a an array of empty string.",
              "isDeprecated": false,
              "name": "ingestVulnerabilities",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": []
        },
        {
          "description": "Node is a union type of all the possible nodes.\n\nIt encapsulates the software tree nodes along with the evidence nodes. In a\npath query, all connecting evidence nodes along with their intermediate subject\nnodes need to be returned in order to create a complete graph.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "Node",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Builder",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Vulnerability",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IsOccurrence",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IsDependency",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "VulnEqual",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyVEXStatement",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HashEqual",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyBad",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyGood",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PkgEqual",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyScorecard",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyVuln",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasSourceAt",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasSBOM",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasSLSA",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HasMetadata",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PointOfContact",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "VulnerabilityMetadata",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "License",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CertifyLegal",
              "ofType": null
            }
          ]
        },
        {
          "description": "Package represents the root of the package trie/tree.\n\nWe map package information to a trie, closely matching the pURL specification\n(https://github.com/package-url/purl-spec/blob/0dd92f26f8bb11956ffdf5e8acfcee71e8560407/README.rst),\nbut deviating from it where GUAC heuristics allow for better representation of\npackage information. Each path in the trie fully represents a package; we split\nthe trie based on the pURL components.\n\nThis node matches a pkg:<type> partial pURL. The type field matches the\npURL types but we might also use \"guac\" for the cases where the pURL\nrepresentation is not complete or when we have custom rules.\n\nSince this node is at the root of the package trie, it is named Package, not\nPackageType.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespaces",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageNamespace",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Package",
          "possibleTypes": []
        },
        {
          "description": "PackageName is a name for packages.\n\nIn the pURL representation, each PackageName matches the\npkg:<type>/<namespace>/<name> pURL.\n\nNames are always mandatory.\n\nThis is the first node in the trie that can be referred to by other parts of\nGUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "versions",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageVersion",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageName",
          "possibleTypes": []
        },
        {
          "description": "PackageNamespace is a namespace for packages.\n\nIn the pURL representation, each PackageNamespace matches the\npkg:<type>/<namespace>/ partial pURL.\n\nNamespaces are optional and type specific. Because they are optional, we use\nempty string to denote missing namespaces.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "names",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageName",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageNamespace",
          "possibleTypes": []
        },
        {
          "description": "PackageOrArtifact is a union of Package and Artifact.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PackageOrArtifact",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            }
          ]
        },
        {
          "description": "PackageOrArtifactInput allows using PackageOrArtifact union as\ninput type to be used in mutations.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrArtifactInput",
          "possibleTypes": []
        },
        {
          "description": "PackageOrArtifactInputs allows using packages and artifacts as input for batch mutations.\nExactly one list must be specified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "packages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifacts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactInputSpec",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrArtifactInputs",
          "possibleTypes": []
        },
        {
          "description": "PackageOrArtifactSpec allows using PackageOrArtifact union as\ninput type to be used in read queries.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageOrSource is a union of Package and Source.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PackageOrSource",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            }
          ]
        },
        {
          "description": "PackageOrSourceInput allows using PackageOrSource union as input for mutations.\n\nExactly one field must be specified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrSourceInput",
          "possibleTypes": []
        },
        {
          "description": "PackageOrSourceInputs allows using packages and sources as input for batch mutations.\nExactly one list must be specified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "packages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "sources",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SourceInputSpec",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrSourceInputs",
          "possibleTypes": []
        },
        {
          "description": "PackageOrSourceSpec allows using PackageOrSource union as input for queries.\n\nExactly one field must be specified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageOrSourceSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifier is a qualifier for a package, a key-value pair.\n\nIn the pURL representation, it is a part of the <qualifiers> part of the\npkg:<type>/<namespace>/<name>@<version>?<qualifiers> pURL.\n\nQualifiers are optional, each Package type defines own rules for handling them,\nand multiple qualifiers could be attached to the same package.\n\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageQualifier",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifierInputSpec allows specifying package qualifiers in mutations.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageQualifierInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageQualifierSpec allows filtering package qualifiers in a query.\n\nKeys are mandatory, but values could also be null if we want to match all\nvalues for a specific key.\n\nNOTE: Before the schema becomes stable, we might change the nulability\nrequirements of these fields.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageQualifierSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageSourceOrArtifact is a union of Package, Source, and Artifact.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "UNION",
          "name": "PackageSourceOrArtifact",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Package",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Source",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Artifact",
              "ofType": null
            }
          ]
        },
        {
          "description": "PackageSourceOrArtifactInput allows using PackageSourceOrArtifact union as\ninput type to be used in mutations.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceInputSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactInputSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageSourceOrArtifactInput",
          "possibleTypes": []
        },
        {
          "description": "PackageSourceOrArtifactInputs allows using PackageSourceOrArtifact union as\ninput type to be used in bulk mutations.\n\nExactly one list must be specified.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "packages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PkgInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "sources",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SourceInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifacts",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "ArtifactInputSpec",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageSourceOrArtifactInputs",
          "possibleTypes": []
        },
        {
          "description": "PackageSourceOrArtifactSpec allows using PackageSourceOrArtifact union as\ninput type to be used in read queries.\n\nExactly one of the value must be set to non-nil.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "package",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PkgSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "source",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artifact",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "ArtifactSpec",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PackageSourceOrArtifactSpec",
          "possibleTypes": []
        },
        {
          "description": "PackageVersion is a package version.\n\nIn the pURL representation, each PackageName matches the\npkg:<type>/<namespace>/<name>@<version> pURL.\n\nVersions are optional and each Package type defines own rules for handling\nthem. For this level of GUAC, these are just opaque strings.\n\nNOTE: The handling of versions might change before this schema becomes stable.\n\nThis node can be referred to by other parts of GUAC.\n\nSubpath and qualifiers are optional. Lack of qualifiers is represented by an\nempty list and lack of subpath by empty string (to be consistent with\noptionality of namespace and version). Two nodes that have different qualifiers\nand/or subpath but the same version mean two different packages in the trie\n(they are different). Two nodes that have same version but qualifiers of one\nare a subset of the qualifier of the other also mean two different packages in\nthe trie.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "version",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "qualifiers",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PackageQualifier",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subpath",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PackageVersion",
          "possibleTypes": []
        },
        {
          "description": "PkgEqual is an attestation that a set of packages are similar.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Collection of packages that are similar",
              "isDeprecated": false,
              "name": "packages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Package",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for the claim that the packages are similar",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PkgEqual",
          "possibleTypes": []
        },
        {
          "description": "PkgEqualInputSpec represents the input to certify that packages are similar.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgEqualInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgEqualSpec allows filtering the list of package equality statements to return\nin a query.\n\nSpecifying just one package allows to query for all similar packages (if any\nexists).",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "packages",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PkgSpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgEqualSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgInputSpec specifies a package for mutations.\n\nThis is different than PkgSpec because we want to encode mandatory fields:\ntype and name. All optional fields are given empty default values.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "version",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "qualifiers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PackageQualifierInputSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "subpath",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PkgMatchType is an enum to determine if the attestation should be done at the\nspecific version or package name.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ALL_VERSIONS"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SPECIFIC_VERSION"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "PkgMatchType",
          "possibleTypes": []
        },
        {
          "description": "PkgSpec allows filtering the list of sources to return in a query.\n\nEach field matches a qualifier from pURL. Use null to match on all values at\nthat level. For example, to get all packages in GUAC backend, use a PkgSpec\nwhere every field is null.\n\nEmpty string at a field means matching with the empty string. If passing in\nqualifiers, all of the values in the list must match. Since we want to return\nnodes with any number of qualifiers if no qualifiers are passed in the input,\nwe must also return the same set of nodes it the qualifiers list is empty. To\nmatch on nodes that don't contain any qualifier, set matchOnlyEmptyQualifiers\nto true. If this field is true, then the qualifiers argument is ignored.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "version",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "[]",
              "description": null,
              "name": "qualifiers",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "PackageQualifierSpec",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": "false",
              "description": null,
              "name": "matchOnlyEmptyQualifiers",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subpath",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PkgSpec",
          "possibleTypes": []
        },
        {
          "description": "PointOfContact is an attestation of how to get in touch with the person(s) responsible\nfor a package, source, or artifact.\n\nAll evidence trees record a justification for the property they represent as\nwell as the document that contains the attestation (origin) and the collector\nthat collected the document (collector).\n\nThe attestation applies to a subject which is a package, source, or artifact.\nIf the attestation targets a package, it must target a PackageName or a\nPackageVersion. If the attestation targets a source, it must target a\nSourceName.\n\nemail is the email address (singular) of the point of contact.\n\ninfo is additional contact information other than email address. This is free\nform.\n\nNOTE: the identifiers for point of contact should be part of software trees.\nThis will benefit from identifier look up and traversal as well as organization\nhierarchy. However, until the use case arises, PointOfContact will be a flat\nreference to the contact details.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subject",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "PackageSourceOrArtifact",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "info",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "since",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PointOfContact",
          "possibleTypes": []
        },
        {
          "description": "PointOfContactInputSpec represents the mutation input to ingest a PointOfContact evidence.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "info",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "since",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PointOfContactInputSpec",
          "possibleTypes": []
        },
        {
          "description": "PointOfContactSpec allows filtering the list of PointOfContact evidence to return in a\nquery.\n\nIf a package is specified in the subject filter, then it must be specified up\nto PackageName or PackageVersion. That is, user must specify package name, or\nname and one of version, qualifiers, or subpath.\n\nIf a source is specified in the subject filter, then it must specify a name,\nand optionally a tag and a commit.\n\nsince filters attestations with a value of since later or equal to the provided filter.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "subject",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "PackageSourceOrArtifactSpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "info",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "since",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "PointOfContactSpec",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artifactSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ArtifactSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all artifacts matching a filter.",
              "isDeprecated": false,
              "name": "artifacts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "builderSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BuilderSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all builders matching a filter.",
              "isDeprecated": false,
              "name": "builders",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Builder",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyBadSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyBadSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyBad attestations matching a filter.",
              "isDeprecated": false,
              "name": "CertifyBad",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyBad",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyGoodSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyGoodSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all CertifyGood attestations matching a filter.",
              "isDeprecated": false,
              "name": "CertifyGood",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyGood",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyLegalSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyLegalSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all legal certifications matching the input filter.",
              "isDeprecated": false,
              "name": "CertifyLegal",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyLegal",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "scorecardSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyScorecardSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all Scorecard certifications matching the filter.",
              "isDeprecated": false,
              "name": "scorecards",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyScorecard",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVEXStatementSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyVEXStatementSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all VEX certifications matching the input filter.",
              "isDeprecated": false,
              "name": "CertifyVEXStatement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyVEXStatement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "certifyVulnSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CertifyVulnSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerability certifications matching the input filter.",
              "isDeprecated": false,
              "name": "CertifyVuln",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "CertifyVuln",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pointOfContactSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PointOfContactSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all PointOfContact attestations matching a filter.",
              "isDeprecated": false,
              "name": "PointOfContact",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PointOfContact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSBOMSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSBOMSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all SBOM certifications.",
              "isDeprecated": false,
              "name": "HasSBOM",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSBOM",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSLSASpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSLSASpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all SLSA attestations matching the filter.",
              "isDeprecated": false,
              "name": "HasSLSA",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSLSA",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasSourceAtSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasSourceAtSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all source mappings that match the filter.",
              "isDeprecated": false,
              "name": "HasSourceAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSourceAt",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hashEqualSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HashEqualSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all artifact equality statements matching a filter.",
              "isDeprecated": false,
              "name": "HashEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HashEqual",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isDependencySpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsDependencySpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all package dependencies that match the filter.",
              "isDeprecated": false,
              "name": "IsDependency",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsDependency",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "isOccurrenceSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "IsOccurrenceSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all artifacts-source/package mappings that match a filter.",
              "isDeprecated": false,
              "name": "IsOccurrence",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IsOccurrence",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "licenseSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "LicenseSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all licenses matching a filter.",
              "isDeprecated": false,
              "name": "licenses",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "License",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "hasMetadataSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "HasMetadataSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all HasMetdata attestations matching a filter.",
              "isDeprecated": false,
              "name": "HasMetadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasMetadata",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all packages matching a filter.",
              "isDeprecated": false,
              "name": "packages",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Package",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "subject",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "target",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxPathLength",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "usingOnly",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "ENUM",
                          "name": "Edge",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "path query returns a path between subject and target, of a maximum length.\n\nSince we want to uniquely identify endpoints, nodes must be specified by\nvalid IDs only (instead of using filters/input spec structs).\n\nSpecifying any Edge value in `usingOnly` will make the path only contain the\ncorresponding GUAC evidence trees (GUAC verbs).",
              "isDeprecated": false,
              "name": "path",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "Node",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "node",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "usingOnly",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "ENUM",
                          "name": "Edge",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "neighbors returns all the direct neighbors of a node.\n\nSimilarly, the input is only specified by its ID.\n\nSpecifying any Edge value in `usingOnly` will make the neighbors list only\ncontain the corresponding GUAC evidence trees (GUAC verbs).",
              "isDeprecated": false,
              "name": "neighbors",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "Node",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "node",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "node returns a single node, regardless of type.\n\nThe input is only specified by its ID.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "Node",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "nodes",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "SCALAR",
                          "name": "ID",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "nodes returns an array of nodes, regardless of type.\n\nThe input is an array of IDs to retrieve.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "Node",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "pkgEqualSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PkgEqualSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all package equality statements matching a filter.",
              "isDeprecated": false,
              "name": "PkgEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "PkgEqual",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "searchText",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "findSoftware takes in a searchText string and looks for software\nthat may be relevant for the input text. This can be seen as fuzzy search\nfunction for Packages, Sources and Artifacts. findSoftware returns a list\nof Packages, Sources and Artifacts that it determines to be relevant to\nthe input searchText.\n\nDue to the nature of full text search being implemented differently on\ndifferent db platforms, the behavior of findSoftware is not guaranteed\nto be the same. In addition, their statistical nature may result in\nresults being different per call and not reproducible.\n\nAll that is asked in the implementation of this API is that it follows\nthe spirit of helping to retrieve the right nodes with best effort.\n\nWarning: This is an EXPERIMENTAL feature. This is subject to change.\nWarning: This is an OPTIONAL feature. Backends are not required to\nimplement this API.",
              "isDeprecated": false,
              "name": "findSoftware",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "PackageSourceOrArtifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilityID",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "findTopLevelPackagesRelatedToVulnerability takes in a vulnerabilityID string\nand looks for top level packages (i.e. packages with an SBOM) related to the\ncorresponding vulnerability. findTopLevelPackagesRelatedToVulnerability\nreturns a list of Nodes, representing the path from the certify vulnerability\nto a top level package.\n\nAll that is asked in the implementation of this API is that it follows\nthe spirit of helping to retrieve the right nodes with best effort.\n\nWarning: This is an EXPERIMENTAL feature. This is subject to change.\nWarning: This is an OPTIONAL feature. Backends are not required to\nimplement this API.",
              "isDeprecated": false,
              "name": "findTopLevelPackagesRelatedToVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "ofType": {
                          "kind": "UNION",
                          "name": "Node",
                          "ofType": null
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "purl",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerabilities related to a package.",
              "isDeprecated": false,
              "name": "findVulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "CertifyVulnOrCertifyVEXStatement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "cpe",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerabilities related to the package identified by the CPE",
              "isDeprecated": false,
              "name": "findVulnerabilityByCPE",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "CertifyVulnOrCertifyVEXStatement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sbomURI",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerabilities related to the package identified by the SBOM URI",
              "isDeprecated": false,
              "name": "findVulnerabilityBySbomURI",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "UNION",
                      "name": "CertifyVulnOrCertifyVEXStatement",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "purl",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all top level packages (i.e. products) dependent on the input PURL package",
              "isDeprecated": false,
              "name": "findDependentProduct",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HasSBOM",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "sourceSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SourceSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all sources matching a filter.",
              "isDeprecated": false,
              "name": "sources",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Source",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnEqualSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnEqualSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all equal vulnerability mappings that match a filter.",
              "isDeprecated": false,
              "name": "vulnEqual",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "VulnEqual",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnerabilityMetadataSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilityMetadataSpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerabilityMetadata attestations matching a filter.",
              "isDeprecated": false,
              "name": "vulnerabilityMetadata",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "VulnerabilityMetadata",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "vulnSpec",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "VulnerabilitySpec",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Returns all vulnerabilities matching a filter.",
              "isDeprecated": false,
              "name": "vulnerabilities",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Vulnerability",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": []
        },
        {
          "description": "SLSA contains all of the fields present in a SLSA attestation.\n\nThe materials and builders are objects of the HasSLSA predicate, everything\nelse are properties extracted from the attestation.\n\nWe also include fields to specify under what conditions the check was performed\n(time of scan, version of scanners, etc.) as well as how this information got\nincluded into GUAC (origin document and the collector for that document).",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Materials of the build resulting in subject",
              "isDeprecated": false,
              "name": "builtFrom",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artifact",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Builder performing the build",
              "isDeprecated": false,
              "name": "builtBy",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Builder",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Type of the builder",
              "isDeprecated": false,
              "name": "buildType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Individual predicates found in the attestation",
              "isDeprecated": false,
              "name": "slsaPredicate",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SLSAPredicate",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the SLSA predicate",
              "isDeprecated": false,
              "name": "slsaVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp (RFC3339Nano format) of build start time",
              "isDeprecated": false,
              "name": "startedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Timestamp (RFC3339Nano format) of build end time",
              "isDeprecated": false,
              "name": "finishedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SLSA",
          "possibleTypes": []
        },
        {
          "description": "SLSAInputSpec is the same as SLSA but for mutation input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "buildType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaPredicate",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SLSAPredicateInputSpec",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "slsaVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "startedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "finishedOn",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAInputSpec",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicate are the values from the SLSA predicate in key-value pair form.\n\nFor example, given the following predicate\n\n```\n\"predicate\": {\n  \"buildDefinition\": {\n    \"externalParameters\": {\n      \"repository\": \"https://github.com/octocat/hello-world\",\n      ...\n    },\n    ...\n  },\n  ...\n}\n```\n\nwe have\n\n```\nkey   = \"buildDefinition.externalParameters.repository\"\nvalue = \"https://github.com/octocat/hello-world\"\n```\n\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SLSAPredicate",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicateInputSpec allows ingesting SLSAPredicateSpec.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAPredicateInputSpec",
          "possibleTypes": []
        },
        {
          "description": "SLSAPredicateSpec is the same as SLSAPredicate, but usable as query input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "key",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "value",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SLSAPredicateSpec",
          "possibleTypes": []
        },
        {
          "description": "ScanMetadata is the metadata attached to vulnerability certification.\n\nIt contains metadata about the scanner process that created the certification.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Time of scan (in RFC 3339 format)",
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URI of the vulnerability database used by the scanner",
              "isDeprecated": false,
              "name": "dbUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the vulnerability database used by the scanner",
              "isDeprecated": false,
              "name": "dbVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "URI of the scanner",
              "isDeprecated": false,
              "name": "scannerUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the scanner",
              "isDeprecated": false,
              "name": "scannerVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ScanMetadata",
          "possibleTypes": []
        },
        {
          "description": "ScanMetadataInput represents the input for certifying vulnerability\nscans in mutations.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "dbVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerUri",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scannerVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScanMetadataInput",
          "possibleTypes": []
        },
        {
          "description": "Scorecard contains all of the fields present in a Scorecard attestation.\n\nWe also include fields to specify under what conditions the check was performed\n(time of scan, version of scanners, etc.) as well as how this information got\nincluded into GUAC (origin document and the collector for that document).",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Individual Scorecard check scores (Branch-Protection, Code-Review, ...)",
              "isDeprecated": false,
              "name": "checks",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ScorecardCheck",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Overall Scorecard score for the source",
              "isDeprecated": false,
              "name": "aggregateScore",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Exact timestamp when the source was last scanned (in RFC 3339 format)",
              "isDeprecated": false,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Version of the Scorecard scanner used to analyze the source",
              "isDeprecated": false,
              "name": "scorecardVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Commit of the Scorecards repository at the time of scanning the source",
              "isDeprecated": false,
              "name": "scorecardCommit",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Scorecard",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheck are the individual checks from scorecard and their values as a\nkey-value pair.\n\nFor example:  Branch-Protection, Code-Review...etc\n\nBased off scorecard's:\ntype jsonCheckResultV2 struct {\n  Details []string                 `json:\"details\"`\n  Score   int                      `json:\"score\"`\n  Reason  string                   `json:\"reason\"`\n  Name    string                   `json:\"name\"`\n  Doc     jsonCheckDocumentationV2 `json:\"documentation\"`\n}\nThis node cannot be directly referred by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ScorecardCheck",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheckInputSpec represents the mutation input for a Scorecard check.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardCheckInputSpec",
          "possibleTypes": []
        },
        {
          "description": "ScorecardCheckSpec is the same as ScorecardCheck, but usable as query input.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "check",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "score",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardCheckSpec",
          "possibleTypes": []
        },
        {
          "description": "ScorecardInputSpec represents the mutation input to ingest a Scorecard.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "checks",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "ScorecardCheckInputSpec",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "aggregateScore",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timeScanned",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardVersion",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scorecardCommit",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "ScorecardInputSpec",
          "possibleTypes": []
        },
        {
          "description": "Source represents the root of the source trie/tree.\n\nWe map source information to a trie, as a derivative of the pURL specification:\neach path in the trie represents a type, namespace, name and an optional\nqualifier that stands for tag/commit information.\n\nThis node represents the type part of the trie path. It is used to represent\nthe version control system that is being used.\n\nSince this node is at the root of the source trie, it is named Source, not\nSourceType.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespaces",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SourceNamespace",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Source",
          "possibleTypes": []
        },
        {
          "description": "SourceInputSpec specifies a source for mutations.\n\nThis is different than SourceSpec because we want to encode that all fields\nexcept tag and commit are mandatory fields. All optional fields are given empty\ndefault values.\n\nIt is an error to set both tag and commit fields to values different than the\ndefault.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": "\"\"",
              "description": null,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SourceInputSpec",
          "possibleTypes": []
        },
        {
          "description": "SourceName represents the url of the repository.\n\nThe name field is mandatory. The tag and commit fields are optional, but it is\nan error to specify both.\n\nThis is the only source trie node that can be referenced by other parts of GUAC.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SourceName",
          "possibleTypes": []
        },
        {
          "description": "SourceNamespace is a namespace for sources.\n\nThis is the location of the repository (such as github/gitlab/bitbucket).\n\nThe namespace field is mandatory.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "namespace",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "names",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SourceName",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "SourceNamespace",
          "possibleTypes": []
        },
        {
          "description": "SourceSpec allows filtering the list of sources to return in a query.\n\nEmpty string at a field means matching with the empty string. Missing field\nmeans retrieving all possible matches.\n\nIt is an error to specify both tag and commit fields, except it both are set as\nempty string (in which case the returned sources are only those for which there\nis no tag/commit information).",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "namespace",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "tag",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "commit",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "SourceSpec",
          "possibleTypes": []
        },
        {
          "description": "The `String`scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": []
        },
        {
          "description": "Define the Time scalar, to be used across GUAC. It follows RFC3339Nano format.\n\nThis is implicit via https://gqlgen.com/reference/scalars/#time\n\nFor GUAC, we assume that all times are stored in UTC format.",
          "enumValues": [],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "SCALAR",
          "name": "Time",
          "possibleTypes": []
        },
        {
          "description": "Records the justification included in the VEX statement.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "COMPONENT_NOT_PRESENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABLE_CODE_NOT_PRESENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABLE_CODE_NOT_IN_EXECUTE_PATH"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INLINE_MITIGATIONS_ALREADY_EXIST"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NOT_PROVIDED"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "VexJustification",
          "possibleTypes": []
        },
        {
          "description": "VexStatementInputSpec represents the input to ingest VEX statements.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "status",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexStatus",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vexJustification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VexJustification",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statement",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statusNotes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "knownSince",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VexStatementInputSpec",
          "possibleTypes": []
        },
        {
          "description": "Records the status of a VEX statement subject.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NOT_AFFECTED"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "AFFECTED"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FIXED"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "UNDER_INVESTIGATION"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "VexStatus",
          "possibleTypes": []
        },
        {
          "description": "VulnEqual is an attestation to link two vulnerabilities together as being equal\"\n\nNote that setting noVuln vulnerability type is invalid for VulnEqual!",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Collection of vulnerabilities that are similar",
              "isDeprecated": false,
              "name": "vulnerabilities",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Vulnerability",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Justification for the attested relationship",
              "isDeprecated": false,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Document from which this attestation is generated from",
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "GUAC collector for the document",
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "VulnEqual",
          "possibleTypes": []
        },
        {
          "description": "VulnEqualInputSpec represents the input to link vulnerabilities to each other.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnEqualInputSpec",
          "possibleTypes": []
        },
        {
          "description": "VulnEqualSpec allows filtering the list of vulnerability links to return\nin a query.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerabilities",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "VulnerabilitySpec",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "justification",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnEqualSpec",
          "possibleTypes": []
        },
        {
          "description": "Vulnerability represents the root of the vulnerability trie/tree.\n\nWe map vulnerability information to a trie, as a derivative of the pURL specification:\neach path in the trie represents a type and a vulnerability ID. This allows for generic\nrepresentation of the various vulnerabilities and does not limit to just cve, ghsa or osv.\nThis would be in the general format: vuln://<general-type>/<vuln-id>\n\nExamples:\n\nCVE, using path separator: vuln://cve/cve-2023-20753\nOSV, representing its knowledge of a GHSA: vuln://osv/ghsa-205hk\nRandom vendor: vuln://snyk/sn-whatever\nNoVuln: vuln://novuln/\n\n\nThis node represents the type part of the trie path. It is used to represent\nthe specific type of the vulnerability: cve, ghsa, osv or some other vendor specific\n\nSince this node is at the root of the vulnerability trie, it is named Vulnerability, not\nVulnerabilityType.\n\nNoVuln is a special vulnerability node to attest that no vulnerability has been\nfound during a vulnerability scan. It will have the type \"novuln\" and contain an empty string\nfor vulnerabilityID\n\nThe resolvers will enforce that both the type and vulnerability IDs are lower case.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "vulnerabilityIDs",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "VulnerabilityID",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Vulnerability",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilityID is a specific vulnerability ID associated with the type of the vulnerability.\n\nThis will be enforced to be all lowercase.\n\nThe namespace field is mandatory.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "vulnerabilityID",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "VulnerabilityID",
          "possibleTypes": []
        },
        {
          "description": "VulnInputSpec specifies a vulnerability for mutations.\n\nThis is different than VulnSpec because we want to encode mandatory fields:\ntype and vulnerabilityID.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerabilityID",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilityInputSpec",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilityMetadata is an attestation that a vulnerability has a related score\nassociated with it.\n\nThe intent of this evidence tree predicate is to allow extensibility of vulnerability\nscore (one-to-one mapping) with a specific vulnerability ID.\n\nA vulnerability ID can have a one-to-many relationship with the VulnerabilityMetadata\nnode as a vulnerability ID can have multiple scores (in various frameworks).\n\nExamples:\n\nscoreType: EPSSv1\nscoreValue: 0.960760000\n\nscoreType: CVSSv2\nscoreValue: 5.0\n\nscoreType: CVSSv3\nscoreValue: 7.5\n\nThe timestamp is used to determine when the score was evaluated for the specific vulnerability.",
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "vulnerability",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Vulnerability",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "scoreType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VulnerabilityScoreType",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "scoreValue",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "timestamp",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "VulnerabilityMetadata",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilityMetadataInputSpec represents the mutation input to ingest a vulnerability metadata.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "scoreType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "VulnerabilityScoreType",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scoreValue",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timestamp",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Time",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilityMetadataInputSpec",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilityMetadataSpec allows filtering the list of VulnerabilityMetadata evidence \nto return in a query.\n\nComparator field is an enum that be set to filter the score and return a\nrange that matches. If the comparator is not specified, it will default to equal operation.\n\nTimestamp specified indicates filtering timestamps after the specified time",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerability",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "VulnerabilitySpec",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scoreType",
              "type": {
                "kind": "ENUM",
                "name": "VulnerabilityScoreType",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "scoreValue",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "comparator",
              "type": {
                "kind": "ENUM",
                "name": "Comparator",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "timestamp",
              "type": {
                "kind": "SCALAR",
                "name": "Time",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "origin",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "collector",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilityMetadataSpec",
          "possibleTypes": []
        },
        {
          "description": "Records the type of the score being captured by the score node",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVSSv2"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVSSv3"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "EPSSv1"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "EPSSv2"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVSSv31"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "CVSSv4"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OWASP"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SSVC"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "VulnerabilityScoreType",
          "possibleTypes": []
        },
        {
          "description": "VulnerabilitySpec allows filtering the list of vulnerabilities to return in a query.\n\nUse null to match on all values at that level.\nFor example, to get all vulnerabilities in GUAC backend, use a VulnSpec\nwhere every field is null.\n\nSetting the noVuln boolean true will ignore the other inputs for type and vulnerabilityID.\nSetting noVuln to true means retrieving only nodes where the type of the vulnerability is \"novuln\"\nand the it has an empty string for vulnerabilityID. Setting it to false filters out all results that are \"novuln\".\nSetting one of the other fields and omitting the noVuln means retrieving vulnerabilities for the corresponding\ntype and vulnerabilityID. Omission of noVuln field will return all vulnerabilities and novuln.",
          "enumValues": [],
          "fields": [],
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "vulnerabilityID",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noVuln",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            }
          ],
          "interfaces": [],
          "kind": "INPUT_OBJECT",
          "name": "VulnerabilitySpec",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isRepeatable",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "QUERY"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "MUTATION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SUBSCRIPTION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FIELD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SCHEMA"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "FIELD_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ENUM_VALUE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "defaultValue",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "types",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "queryType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "mutationType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "directives",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [],
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "specifiedByURL",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": [],
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": []
        },
        {
          "description": null,
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "LIST"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NON_NULL"
            }
          ],
          "fields": [],
          "inputFields": [],
          "interfaces": [],
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": []
        }
      ]
    }
  }
}